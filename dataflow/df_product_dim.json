{
	"name": "df_product_dim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "tbl_product",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "tb_product_dim",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tb_product_dim",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "tb_product_dim",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "select2"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select3"
				},
				{
					"name": "filter3"
				},
				{
					"name": "alterRow2"
				},
				{
					"name": "derivedColumn4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          PRODUCT_PRICE as string,",
				"          PRODUCT_DESCRIPTION as string,",
				"          IS_ACTIVE as string,",
				"          PRODUCT_SUBCATEGORY_ID as string,",
				"          PRODUCT_SUBCATEGORY_NAME as string,",
				"          PRODUCT_SIZE as string,",
				"          PRODUCT_CATEGORY_NAME as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          {product_dim_kEY } as long,",
				"          STG_CREATE_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          Surr_Product_kEY as integer,",
				"          Product_ID as integer,",
				"          Product_Name as string,",
				"          Product_Price as decimal(5,2),",
				"          Is_Active as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          Product_Category_Name as string,",
				"          Product_SubCategory_ID as integer,",
				"          Product_SubCategory_Name as string,",
				"          Product_Size as string,",
				"          Product_Description as string,",
				"          Eff_Start_Date as date,",
				"          Eff_End_Date as date,",
				"          DM_CREATE_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"derivedColumn1, select2 lookup(PRODUCT_ID == TGT_Product_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"derivedColumn2 select(mapColumn(",
				"          Surr_Product_kEY,",
				"          TGT_Product_ID = Product_ID,",
				"          TGT_Product_Name = Product_Name,",
				"          TGT_Product_Price = Product_Price,",
				"          TGT_Is_Active = Is_Active,",
				"          TGT_PRODUCT_CATEGORY_ID = PRODUCT_CATEGORY_ID,",
				"          TGT_Product_Category_Name = Product_Category_Name,",
				"          TGT_Product_SubCategory_ID = Product_SubCategory_ID,",
				"          TGT_Product_SubCategory_Name = Product_SubCategory_Name,",
				"          TGT_Product_Size = Product_Size,",
				"          TGT_Product_Description = Product_Description,",
				"          Eff_Start_Date,",
				"          Eff_End_Date,",
				"          DM_CREATE_DATE,",
				"          tgt_md5",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"lookup1 split(isNull(TGT_Product_ID) || src_md5 != tgt_md5,",
				"     disjoint: false) ~> split1@(Insert, default)",
				"filter1 derive(src_md5 = md5(concat(PRODUCT_NAME,toString(PRODUCT_PRICE),PRODUCT_DESCRIPTION,toString(PRODUCT_SUBCATEGORY_ID),PRODUCT_SUBCATEGORY_NAME,PRODUCT_SIZE,PRODUCT_CATEGORY_NAME,PRODUCT_CATEGORY_ID)),",
				"          Eff_Start_Date = currentDate(),",
				"          DM_CREATE_DATE = currentDate()) ~> derivedColumn1",
				"source1 filter(IS_ACTIVE=='Active') ~> filter1",
				"source2 derive(tgt_md5 = md5(concat(Product_Name,toString(Product_Price),Product_Description,toString(Product_SubCategory_ID),Product_SubCategory_Name,Product_Size,Product_Category_Name,PRODUCT_CATEGORY_ID))) ~> derivedColumn2",
				"split1@Insert select(mapColumn(",
				"          PRODUCT_ID,",
				"          PRODUCT_NAME,",
				"          PRODUCT_PRICE,",
				"          PRODUCT_DESCRIPTION,",
				"          IS_ACTIVE,",
				"          PRODUCT_SUBCATEGORY_ID,",
				"          PRODUCT_SUBCATEGORY_NAME,",
				"          PRODUCT_SIZE,",
				"          PRODUCT_CATEGORY_NAME,",
				"          PRODUCT_CATEGORY_ID,",
				"          Eff_Start_Date = split1@Insert@Eff_Start_Date,",
				"          DM_CREATE_DATE = split1@Insert@DM_CREATE_DATE,",
				"          Eff_End_Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"lookup1 filter(src_md5 != tgt_md5) ~> filter3",
				"derivedColumn4 alterRow(updateIf(1===1)) ~> alterRow2",
				"filter3 derive(Eff_End_Date = currentDate()) ~> derivedColumn4",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surr_Product_kEY as integer,",
				"          Product_ID as integer,",
				"          Product_Name as string,",
				"          Product_Price as decimal(5,2),",
				"          Is_Active as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          Product_Category_Name as string,",
				"          Product_SubCategory_ID as integer,",
				"          Product_SubCategory_Name as string,",
				"          Product_Size as string,",
				"          Product_Description as string,",
				"          Eff_Start_Date as date,",
				"          Eff_End_Date as date,",
				"          DM_CREATE_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Product_ID = PRODUCT_ID,",
				"          Product_Name = PRODUCT_NAME,",
				"          Product_Price = PRODUCT_PRICE,",
				"          Is_Active = IS_ACTIVE,",
				"          PRODUCT_CATEGORY_ID,",
				"          Product_Category_Name = PRODUCT_CATEGORY_NAME,",
				"          Product_SubCategory_ID = PRODUCT_SUBCATEGORY_ID,",
				"          Product_SubCategory_Name = PRODUCT_SUBCATEGORY_NAME,",
				"          Product_Size = PRODUCT_SIZE,",
				"          Product_Description = PRODUCT_DESCRIPTION,",
				"          Eff_Start_Date,",
				"          DM_CREATE_DATE,",
				"          Eff_End_Date",
				"     )) ~> sink1",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surr_Product_kEY as integer,",
				"          Product_ID as integer,",
				"          Product_Name as string,",
				"          Product_Price as decimal(5,2),",
				"          Is_Active as string,",
				"          PRODUCT_CATEGORY_ID as string,",
				"          Product_Category_Name as string,",
				"          Product_SubCategory_ID as integer,",
				"          Product_SubCategory_Name as string,",
				"          Product_Size as string,",
				"          Product_Description as string,",
				"          Eff_Start_Date as date,",
				"          Eff_End_Date as date,",
				"          DM_CREATE_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Surr_Product_kEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Surr_Product_kEY,",
				"          Eff_End_Date",
				"     )) ~> sink3"
			]
		}
	}
}